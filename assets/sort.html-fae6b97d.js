const e=JSON.parse('{"key":"v-378a83d7","path":"/%E7%90%86%E8%AE%BA%E6%80%9D%E6%83%B3/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/sort.html","title":"经典排序算法","lang":"zh-CN","frontmatter":{"description":"用Go实现经典的几个排序算法 稳定排序 稳定排序指的是排序过后相同元素的相对位置不会发送变化。 冒泡排序 在这里插入图片描述 从下标0开始，不断将两个数字相比较，如果前一个数大于后一个数字，那么就交换位置，直至末尾。外层循环每一轮结束后，就能确定一个值是第i+1大的元素，于是后续的元素就不再去交换，所以内层循环的终止条件是len(slice)-(i+1...","head":[["meta",{"property":"og:url","content":"https://golang.halfiisland.com/Golang-Doc/%E7%90%86%E8%AE%BA%E6%80%9D%E6%83%B3/%E7%AE%97%E6%B3%95%E5%88%B7%E9%A2%98/sort.html"}],["meta",{"property":"og:site_name","content":"Golang中文学习文档"}],["meta",{"property":"og:title","content":"经典排序算法"}],["meta",{"property":"og:description","content":"用Go实现经典的几个排序算法 稳定排序 稳定排序指的是排序过后相同元素的相对位置不会发送变化。 冒泡排序 在这里插入图片描述 从下标0开始，不断将两个数字相比较，如果前一个数大于后一个数字，那么就交换位置，直至末尾。外层循环每一轮结束后，就能确定一个值是第i+1大的元素，于是后续的元素就不再去交换，所以内层循环的终止条件是len(slice)-(i+1..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-22T15:50:15.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-22T15:50:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"经典排序算法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-22T15:50:15.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"稳定排序","slug":"稳定排序","link":"#稳定排序","children":[{"level":3,"title":"冒泡排序","slug":"冒泡排序","link":"#冒泡排序","children":[]},{"level":3,"title":"插入排序","slug":"插入排序","link":"#插入排序","children":[]},{"level":3,"title":"归并排序","slug":"归并排序","link":"#归并排序","children":[]}]},{"level":2,"title":"不稳定排序","slug":"不稳定排序","link":"#不稳定排序","children":[{"level":3,"title":"选择排序","slug":"选择排序","link":"#选择排序","children":[]},{"level":3,"title":"希尔排序","slug":"希尔排序","link":"#希尔排序","children":[]},{"level":3,"title":"快速排序","slug":"快速排序","link":"#快速排序","children":[]},{"level":3,"title":"计数排序","slug":"计数排序","link":"#计数排序","children":[]},{"level":3,"title":"基数排序","slug":"基数排序","link":"#基数排序","children":[]},{"level":3,"title":"桶排序","slug":"桶排序","link":"#桶排序","children":[]},{"level":3,"title":"堆排序","slug":"堆排序","link":"#堆排序","children":[]},{"level":3,"title":"","slug":"","link":"#","children":[]}]}],"git":{"createdTime":1677081015000,"updatedTime":1677081015000,"contributors":[{"name":"246859","email":"2633565580@qq.com","commits":1}]},"readingTime":{"minutes":2.35,"words":353},"filePathRelative":"理论思想/算法刷题/sort.md","localizedDate":"2023年2月22日","autoDesc":true}');export{e as data};
