const t=JSON.parse('{"key":"v-02261b48","path":"/%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/%E8%AF%AD%E6%B3%95%E8%BF%9B%E9%98%B6/80.method.html","title":"方法","lang":"zh-CN","frontmatter":{"description":"方法与函数的区别在于，方法拥有接收者，而函数没有，且只有自定义类型能够拥有方法。先来看一个例子。 先声明了一个类型IntSlice，其底层类型为[]int，再声明了三个方法Get，`Set和Len，方法的长相与函数并无太大的区别，只是多了一小段(i IntSlice) 。i`就是接收者，IntSlice就是接收者的类型，接收者就类似于其他语言中的thi...","head":[["meta",{"property":"og:url","content":"https://golang.halfiisland.com/%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/%E8%AF%AD%E6%B3%95%E8%BF%9B%E9%98%B6/80.method.html"}],["meta",{"property":"og:site_name","content":"Golang中文学习文档"}],["meta",{"property":"og:title","content":"方法"}],["meta",{"property":"og:description","content":"方法与函数的区别在于，方法拥有接收者，而函数没有，且只有自定义类型能够拥有方法。先来看一个例子。 先声明了一个类型IntSlice，其底层类型为[]int，再声明了三个方法Get，`Set和Len，方法的长相与函数并无太大的区别，只是多了一小段(i IntSlice) 。i`就是接收者，IntSlice就是接收者的类型，接收者就类似于其他语言中的thi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-18T09:44:37.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-18T09:44:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-18T09:44:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":3,"title":"值接收者","slug":"值接收者","link":"#值接收者","children":[]},{"level":3,"title":"指针接收者","slug":"指针接收者","link":"#指针接收者","children":[]}],"git":{"createdTime":1676264655000,"updatedTime":1689673477000,"contributors":[{"name":"246859","email":"2633565580@qq.com","commits":3}]},"readingTime":{"minutes":8.33,"words":1250},"filePathRelative":"语言入门/语法进阶/80.method.md","localizedDate":"2023年2月13日","autoDesc":true}');export{t as data};
