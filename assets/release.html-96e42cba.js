import{_ as t,V as l,W as c,X as n,Y as e,$ as s,Z as a,F as i}from"./framework-44a66fc7.js";const p={},r=n("h1",{id:"更新日志",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#更新日志","aria-hidden":"true"},"#"),e(" 更新日志")],-1),d=n("p",null,"Go官方团队每半年发布一个二级版本，并且只有最新的两个二级版本是长期维护，目前Go第二个主版本尚且没有任何消息。",-1),u={href:"https://go.dev/doc/devel/release",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,"目前维护的两个最新版本：",-1),g=n("ul",null,[n("li",null,[n("code",null,"go1.21"),e(" 发布于2023-08-08")]),n("li",null,[n("code",null,"go1.20"),e(" 发布于2023-02-01")])],-1),h=n("h2",{id:"_1-21",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-21","aria-hidden":"true"},"#"),e(" 1.21")],-1),m={href:"https://go.dev/doc/go1.21",target:"_blank",rel:"noopener noreferrer"},k=n("h3",{id:"_1-21-0-2023-08-08",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-21-0-2023-08-08","aria-hidden":"true"},"#"),e(" 1.21.0 （2023-08-08）")],-1),f=n("p",null,[n("strong",null,"语言层面")],-1),v=a(`<li><p>新增了两个内置函数<code>min</code> ，<code>max</code>，用于计算最大值最小值。</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">var</span> x<span class="token punctuation">,</span> y <span class="token builtin">int</span>
m <span class="token operator">:=</span> <span class="token function">min</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>                 
m <span class="token operator">:=</span> <span class="token function">min</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>             
m <span class="token operator">:=</span> <span class="token function">max</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>         
c <span class="token operator">:=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>      
f <span class="token operator">:=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">float32</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>更新了<code>package</code>初始化顺序</p><ul><li><p>按导入路径对所有包进行排序</p></li><li><p>重复执行，直到包的列表为空</p></li><li><p>找到列表中所有的导入都已被初始化的第一个包</p></li><li><p>初始化该包并将其从列表中删除</p></li></ul></li><li><p>提高和改进了类型推理的能力和精度，主要是泛型相关。</p></li>`,3),b=n("code",null,"for range",-1),x={href:"https://github.com/golang/go/wiki/LoopvarExperiment",target:"_blank",rel:"noopener noreferrer"},G={href:"https://go.googlesource.com/proposal/+/master/design/60078-loopvar.md",target:"_blank",rel:"noopener noreferrer"},P=a("<li><p>保证了<code>recover</code>的返回值不会是<code>nil</code>，如果在调用<code>panic</code>时参数为<code>nil</code>，则会触发另一个<code>panic</code>，返回<code>*runtime.PanicNilError</code>。为了兼容性，在编译时设置<code>GODEBUG=panicnil=1</code>允许向<code>panic</code>传入<code>nil</code>。</p></li>",1),L=a("<p><strong>标准库</strong></p><ol><li>新增<code>log/slog</code>库，提供标准的结构化日志库</li><li>新增<code>testing/slogtest</code>库，用于验证<code>slog.Handler</code>的实现</li><li>新增<code>slices</code>库，提供了一系列泛型函数用于操作切片。</li><li>新增<code>maps</code>库，提供了一系列泛型函数用于操作map</li><li>新增<code>cmp</code>库，用于比较有序类型。</li></ol><p><strong>其他</strong></p>",3),E=n("li",null,"go1.21.0至少在windows系统上至少需要win10或者Windows Server 2016版本以上才能运行，先前的版本不再支持。",-1),y=n("li",null,"go1.21.0至少需要在macOS 10.15 Catalina或者更新的版本才能运行，先前的版本不再支持。",-1),w=n("li",null,"新增了实验性的WebAssembly System Interface，Go依旧在WASM这块不断的探索。",-1),N={href:"https://go.dev/doc/pgo",target:"_blank",rel:"noopener noreferrer"},S=n("code",null,"default.pgo",-1),V=n("li",null,"当打印非常深的运行时调用栈时，从原来的只打印前一百个帧，到现在分别打印前50的最后的50个帧。",-1),O=n("li",null,"优化了在Unix平台CGO的调用性能，从1-3微秒优化到了现在的100-200纳秒。",-1),W=n("li",null,"在1.21版本，编译速度提升了接近6%，这主要归功于编译器本身使用PGO来构建。",-1),B=n("p",null,"以上是一些主要的更新信息，更详细的内容访问官方网站。",-1);function T(C,I){const o=i("ExternalLinkIcon");return l(),c("div",null,[r,d,n("p",null,[e("Go语言更新日志："),n("a",u,[e("Release History - The Go Programming Language"),s(o)])]),_,g,h,n("p",null,[e("Go1.21更新日志："),n("a",m,[e("Go 1.21 Release Notes - The Go Programming Language"),s(o)])]),k,f,n("ol",null,[v,n("li",null,[n("p",null,[e("推出了"),b,e("循环变量改进的预览版本，这是一个困扰了Go开发者接近十年的问题，官方终于要解决了，详情见："),n("a",x,[e("LoopvarExperiment · golang/go Wiki (github.com)"),s(o)]),e("和"),n("a",G,[e("Proposal: Less Error-Prone Loop Variable Scoping (googlesource.com)"),s(o)])])]),P]),L,n("ol",null,[E,y,w,n("li",null,[e("在1.20还是实验性质的（Profile-guide optimization）PGO（见"),n("a",N,[e("Profile-guided optimization - The Go Programming Language"),s(o)]),e("），1.21版本正式启用。在main包下包含"),S,e("文件会启用该功能，开启后性能可能会提升2%-7%。")]),V,O,W]),B])}const A=t(p,[["render",T],["__file","release.html.vue"]]);export{A as default};
