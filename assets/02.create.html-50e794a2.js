const e=JSON.parse('{"key":"v-1f315742","path":"/%E7%90%86%E8%AE%BA%E6%80%9D%E6%83%B3/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.create.html","title":"创建型模式","lang":"zh-CN","frontmatter":{"description":"创建型模式的主要关注点是“怎样创建对象？”，它的主要特点是“将对象的创建与使用分离”。 这样可以降低系统的耦合度，使用者不需要关注对象的创建细节。 简单工厂模式 这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。在工厂模式中，我们在创建对象时不会对客户端暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象。 在Go中是没有构造函...","head":[["meta",{"property":"og:url","content":"https://golang.halfiisland.com/%E7%90%86%E8%AE%BA%E6%80%9D%E6%83%B3/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/02.create.html"}],["meta",{"property":"og:site_name","content":"Golang中文学习文档"}],["meta",{"property":"og:title","content":"创建型模式"}],["meta",{"property":"og:description","content":"创建型模式的主要关注点是“怎样创建对象？”，它的主要特点是“将对象的创建与使用分离”。 这样可以降低系统的耦合度，使用者不需要关注对象的创建细节。 简单工厂模式 这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。在工厂模式中，我们在创建对象时不会对客户端暴露创建逻辑，并且是通过使用一个共同的接口来指向新创建的对象。 在Go中是没有构造函..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-13T05:04:15.000Z"}],["meta",{"property":"article:modified_time","content":"2023-02-13T05:04:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"创建型模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-13T05:04:15.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"简单工厂模式","slug":"简单工厂模式","link":"#简单工厂模式","children":[]},{"level":2,"title":"工厂方法模式","slug":"工厂方法模式","link":"#工厂方法模式","children":[]},{"level":2,"title":"抽象工厂模式","slug":"抽象工厂模式","link":"#抽象工厂模式","children":[]},{"level":2,"title":"建造者模式","slug":"建造者模式","link":"#建造者模式","children":[]},{"level":2,"title":"原型模式","slug":"原型模式","link":"#原型模式","children":[]},{"level":2,"title":"单例模式","slug":"单例模式","link":"#单例模式","children":[]}],"git":{"createdTime":1676264655000,"updatedTime":1676264655000,"contributors":[{"name":"246859","email":"2633565580@qq.com","commits":1}]},"readingTime":{"minutes":16.47,"words":2471},"filePathRelative":"理论思想/设计模式/02.create.md","localizedDate":"2023年2月13日","autoDesc":true}');export{e as data};
